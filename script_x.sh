#!/bin/bash

# Скрипт принимает первый аргумент скрипта как входную директорию
# Скрипт принимает второй аргумент скрипта как выходную директорию

# Присваивание переменным input_dir и output_dir значений аргументов скрипта
input_dir=$1
output_dir=$2

if [ "$#" -ne 2 ]; then
    echo "Ошибка: ожидается два аргумента: путь к исходной директории и путь к целевой директории"
    exit 1
fi

# Проверка существования входной директории
if [[ ! -d "$1" ]]; then
    echo "Ошибка: Входная директория не существует!"
    exit 1
fi

# Осуществляет проверку наличия прав чтения для всех вложенных директорий в указанной входной директории.
# Выводит соответствующее предупреждение, если нет прав доступа к любой из директорий.
find "$input_dir" -type d | while read dir; do
    if [[ ! -r $dir ]]; then
        echo "Нет прав доступа к директории $dir. Используйте sudo или проверьте права."
    fi
done

# Создание выходной директории, если она не существует
mkdir -p "$output_dir"

# Поиск всех файлов в входной директории и их копирование в выходную директорию
# Уникальное имя файла создается при обнаружении совпадения имен
find "$input_dir" -type f | while read file; do
    base_name=$(basename "$file")
    output_file="$output_dir/$base_name"
    c=1
    # Цикл проверяет наличие файла с таким же именем и при необходимости меняет имя
    while [[ -f "$output_file" ]]; do
        output_file="${output_dir}/v${c}_${base_name}"
        ((c++))  # Увеличиваем счетчик для создания уникального имени файла в случае, если файл с исходным именем уже существует в выходной директории.
    done
    cp "$file" "$output_file"  # Копирование файла в выходную директорию
done

# Вывод сообщения об успешном завершении операции копирования
echo "Копирование всех файлов из '$input_dir' в '$output_dir' произведено успешно!"
